<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="870" onload="init(evt)" viewBox="0 0 1200 870" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
            if (!isEdge) {
                svg.removeAttribute("viewBox");
            }
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="870" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="853.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1190" y="24.00">Search</text><text id="matched" x="1190" y="853.00"> </text><svg id="frames" x="10" width="1180" total_samples="84"><g><title>cli`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (1 samples, 1.19%)</title><rect x="0.0000%" y="661" width="1.1905%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="671.50"></text></g><g><title>cli`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 1.19%)</title><rect x="0.0000%" y="645" width="1.1905%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="1"/><text x="0.2500%" y="655.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 1.19%)</title><rect x="0.0000%" y="629" width="1.1905%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="1"/><text x="0.2500%" y="639.50"></text></g><g><title>cli`primitive_types::U256::pow (1 samples, 1.19%)</title><rect x="1.1905%" y="629" width="1.1905%" height="15" fill="rgb(248,212,6)" fg:x="1" fg:w="1"/><text x="1.4405%" y="639.50"></text></g><g><title>cli`&lt;primitive_types::U256 as core::ops::arith::Mul&gt;::mul (1 samples, 1.19%)</title><rect x="1.1905%" y="613" width="1.1905%" height="15" fill="rgb(208,68,35)" fg:x="1" fg:w="1"/><text x="1.4405%" y="623.50"></text></g><g><title>cli`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (5 samples, 5.95%)</title><rect x="0.0000%" y="693" width="5.9524%" height="15" fill="rgb(232,128,0)" fg:x="0" fg:w="5"/><text x="0.2500%" y="703.50">cli`&lt;all..</text></g><g><title>cli`core::ops::function::impls::_&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (5 samples, 5.95%)</title><rect x="0.0000%" y="677" width="5.9524%" height="15" fill="rgb(207,160,47)" fg:x="0" fg:w="5"/><text x="0.2500%" y="687.50">cli`core..</text></g><g><title>cli`&lt;shared::range::elem_ty::Elem&lt;shared::nodes::concrete::Concrete&gt; as shared::range::range_string::ToRangeString&gt;::to_range_string (4 samples, 4.76%)</title><rect x="1.1905%" y="661" width="4.7619%" height="15" fill="rgb(228,23,34)" fg:x="1" fg:w="4"/><text x="1.4405%" y="671.50">cli`&lt;s..</text></g><g><title>cli`shared::nodes::concrete::Concrete::as_human_string (4 samples, 4.76%)</title><rect x="1.1905%" y="645" width="4.7619%" height="15" fill="rgb(218,30,26)" fg:x="1" fg:w="4"/><text x="1.4405%" y="655.50">cli`sh..</text></g><g><title>cli`shared::nodes::concrete::Concrete::as_human_string (3 samples, 3.57%)</title><rect x="2.3810%" y="629" width="3.5714%" height="15" fill="rgb(220,122,19)" fg:x="2" fg:w="3"/><text x="2.6310%" y="639.50">cli`..</text></g><g><title>cli`primitive_types::U256::pow (3 samples, 3.57%)</title><rect x="2.3810%" y="613" width="3.5714%" height="15" fill="rgb(250,228,42)" fg:x="2" fg:w="3"/><text x="2.6310%" y="623.50">cli`..</text></g><g><title>cli`&lt;primitive_types::U256 as core::ops::arith::Mul&gt;::mul (2 samples, 2.38%)</title><rect x="3.5714%" y="597" width="2.3810%" height="15" fill="rgb(240,193,28)" fg:x="3" fg:w="2"/><text x="3.8214%" y="607.50">cl..</text></g><g><title>cli`&lt;pyrometer::context::analyzers::LocStrSpan as ariadne::Span&gt;::end (1 samples, 1.19%)</title><rect x="9.5238%" y="661" width="1.1905%" height="15" fill="rgb(216,20,37)" fg:x="8" fg:w="1"/><text x="9.7738%" y="671.50"></text></g><g><title>cli`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 3.57%)</title><rect x="8.3333%" y="677" width="3.5714%" height="15" fill="rgb(206,188,39)" fg:x="7" fg:w="3"/><text x="8.5833%" y="687.50">cli`..</text></g><g><title>cli`&lt;pyrometer::context::analyzers::LocStrSpan as ariadne::Span&gt;::start (1 samples, 1.19%)</title><rect x="10.7143%" y="661" width="1.1905%" height="15" fill="rgb(217,207,13)" fg:x="9" fg:w="1"/><text x="10.9643%" y="671.50"></text></g><g><title>cli`&lt;ariadne::draw::Foreground&lt;T&gt; as core::fmt::Display&gt;::fmt (1 samples, 1.19%)</title><rect x="11.9048%" y="629" width="1.1905%" height="15" fill="rgb(231,73,38)" fg:x="10" fg:w="1"/><text x="12.1548%" y="639.50"></text></g><g><title>cli`core::fmt::Formatter::write_fmt (1 samples, 1.19%)</title><rect x="11.9048%" y="613" width="1.1905%" height="15" fill="rgb(225,20,46)" fg:x="10" fg:w="1"/><text x="12.1548%" y="623.50"></text></g><g><title>cli`core::fmt::write (1 samples, 1.19%)</title><rect x="11.9048%" y="597" width="1.1905%" height="15" fill="rgb(210,31,41)" fg:x="10" fg:w="1"/><text x="12.1548%" y="607.50"></text></g><g><title>cli`&lt;yansi::paint::Paint&lt;T&gt; as core::fmt::Display&gt;::fmt (1 samples, 1.19%)</title><rect x="11.9048%" y="581" width="1.1905%" height="15" fill="rgb(221,200,47)" fg:x="10" fg:w="1"/><text x="12.1548%" y="591.50"></text></g><g><title>cli`yansi::style::Style::fmt_prefix (1 samples, 1.19%)</title><rect x="11.9048%" y="565" width="1.1905%" height="15" fill="rgb(226,26,5)" fg:x="10" fg:w="1"/><text x="12.1548%" y="575.50"></text></g><g><title>cli`core::fmt::Formatter::write_fmt (1 samples, 1.19%)</title><rect x="11.9048%" y="549" width="1.1905%" height="15" fill="rgb(249,33,26)" fg:x="10" fg:w="1"/><text x="12.1548%" y="559.50"></text></g><g><title>cli`core::fmt::write (1 samples, 1.19%)</title><rect x="11.9048%" y="533" width="1.1905%" height="15" fill="rgb(235,183,28)" fg:x="10" fg:w="1"/><text x="12.1548%" y="543.50"></text></g><g><title>cli`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (1 samples, 1.19%)</title><rect x="11.9048%" y="517" width="1.1905%" height="15" fill="rgb(221,5,38)" fg:x="10" fg:w="1"/><text x="12.1548%" y="527.50"></text></g><g><title>cli`&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (1 samples, 1.19%)</title><rect x="11.9048%" y="501" width="1.1905%" height="15" fill="rgb(247,18,42)" fg:x="10" fg:w="1"/><text x="12.1548%" y="511.50"></text></g><g><title>cli`ariadne::write::_&lt;impl ariadne::Report&lt;S&gt;&gt;::write_for_stream (7 samples, 8.33%)</title><rect x="5.9524%" y="693" width="8.3333%" height="15" fill="rgb(241,131,45)" fg:x="5" fg:w="7"/><text x="6.2024%" y="703.50">cli`ariadne:..</text></g><g><title>cli`&lt;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (2 samples, 2.38%)</title><rect x="11.9048%" y="677" width="2.3810%" height="15" fill="rgb(249,31,29)" fg:x="10" fg:w="2"/><text x="12.1548%" y="687.50">cl..</text></g><g><title>cli`&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (2 samples, 2.38%)</title><rect x="11.9048%" y="661" width="2.3810%" height="15" fill="rgb(225,111,53)" fg:x="10" fg:w="2"/><text x="12.1548%" y="671.50">cl..</text></g><g><title>cli`core::fmt::write (2 samples, 2.38%)</title><rect x="11.9048%" y="645" width="2.3810%" height="15" fill="rgb(238,160,17)" fg:x="10" fg:w="2"/><text x="12.1548%" y="655.50">cl..</text></g><g><title>cli`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (1 samples, 1.19%)</title><rect x="13.0952%" y="629" width="1.1905%" height="15" fill="rgb(214,148,48)" fg:x="11" fg:w="1"/><text x="13.3452%" y="639.50"></text></g><g><title>cli`&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (1 samples, 1.19%)</title><rect x="13.0952%" y="613" width="1.1905%" height="15" fill="rgb(232,36,49)" fg:x="11" fg:w="1"/><text x="13.3452%" y="623.50"></text></g><g><title>libsystem_kernel.dylib`write (1 samples, 1.19%)</title><rect x="13.0952%" y="597" width="1.1905%" height="15" fill="rgb(209,103,24)" fg:x="11" fg:w="1"/><text x="13.3452%" y="607.50"></text></g><g><title>cli`&lt;pyrometer::context::analyzers::bounds::FunctionVarsBoundAnalysis as pyrometer::context::analyzers::ReportDisplay&gt;::print_reports (13 samples, 15.48%)</title><rect x="0.0000%" y="709" width="15.4762%" height="15" fill="rgb(229,88,8)" fg:x="0" fg:w="13"/><text x="0.2500%" y="719.50">cli`&lt;pyrometer::context:..</text></g><g><title>cli`shared::nodes::func_ty::FunctionNode::name (1 samples, 1.19%)</title><rect x="14.2857%" y="693" width="1.1905%" height="15" fill="rgb(213,181,19)" fg:x="12" fg:w="1"/><text x="14.5357%" y="703.50"></text></g><g><title>cli`clap::builder::command::Command::get_matches_from (1 samples, 1.19%)</title><rect x="15.4762%" y="709" width="1.1905%" height="15" fill="rgb(254,191,54)" fg:x="13" fg:w="1"/><text x="15.7262%" y="719.50"></text></g><g><title>cli`clap::builder::command::Command::_do_parse (1 samples, 1.19%)</title><rect x="15.4762%" y="693" width="1.1905%" height="15" fill="rgb(241,83,37)" fg:x="13" fg:w="1"/><text x="15.7262%" y="703.50"></text></g><g><title>cli`clap::parser::parser::Parser::get_matches_with (1 samples, 1.19%)</title><rect x="15.4762%" y="677" width="1.1905%" height="15" fill="rgb(233,36,39)" fg:x="13" fg:w="1"/><text x="15.7262%" y="687.50"></text></g><g><title>cli`clap::parser::validator::Validator::validate (1 samples, 1.19%)</title><rect x="15.4762%" y="661" width="1.1905%" height="15" fill="rgb(226,3,54)" fg:x="13" fg:w="1"/><text x="15.7262%" y="671.50"></text></g><g><title>cli`clap::util::flat_map::FlatMap&lt;K,V&gt;::extend_unchecked (1 samples, 1.19%)</title><rect x="15.4762%" y="645" width="1.1905%" height="15" fill="rgb(245,192,40)" fg:x="13" fg:w="1"/><text x="15.7262%" y="655.50"></text></g><g><title>cli`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 1.19%)</title><rect x="15.4762%" y="629" width="1.1905%" height="15" fill="rgb(238,167,29)" fg:x="13" fg:w="1"/><text x="15.7262%" y="639.50"></text></g><g><title>cli`core::ptr::drop_in_place&lt;pyrometer::Analyzer&gt; (1 samples, 1.19%)</title><rect x="16.6667%" y="709" width="1.1905%" height="15" fill="rgb(232,182,51)" fg:x="14" fg:w="1"/><text x="16.9167%" y="719.50"></text></g><g><title>cli`core::ptr::drop_in_place&lt;petgraph::graph_impl::Graph&lt;shared::Node,shared::Edge,petgraph::Directed,usize&gt;&gt; (1 samples, 1.19%)</title><rect x="16.6667%" y="693" width="1.1905%" height="15" fill="rgb(231,60,39)" fg:x="14" fg:w="1"/><text x="16.9167%" y="703.50"></text></g><g><title>cli`core::ptr::drop_in_place&lt;petgraph::graph_impl::Node&lt;shared::Node,usize&gt;&gt; (1 samples, 1.19%)</title><rect x="16.6667%" y="677" width="1.1905%" height="15" fill="rgb(208,69,12)" fg:x="14" fg:w="1"/><text x="16.9167%" y="687.50"></text></g><g><title>cli`core::ptr::drop_in_place&lt;solang_parser::pt::Statement&gt; (1 samples, 1.19%)</title><rect x="16.6667%" y="661" width="1.1905%" height="15" fill="rgb(235,93,37)" fg:x="14" fg:w="1"/><text x="16.9167%" y="671.50"></text></g><g><title>cli`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;solang_parser::pt::Expression&gt;&gt; (1 samples, 1.19%)</title><rect x="16.6667%" y="645" width="1.1905%" height="15" fill="rgb(213,116,39)" fg:x="14" fg:w="1"/><text x="16.9167%" y="655.50"></text></g><g><title>cli`core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;solang_parser::pt::Expression&gt;&gt; (1 samples, 1.19%)</title><rect x="16.6667%" y="629" width="1.1905%" height="15" fill="rgb(222,207,29)" fg:x="14" fg:w="1"/><text x="16.9167%" y="639.50"></text></g><g><title>cli`core::ptr::drop_in_place&lt;solang_parser::pt::Expression&gt; (1 samples, 1.19%)</title><rect x="16.6667%" y="613" width="1.1905%" height="15" fill="rgb(206,96,30)" fg:x="14" fg:w="1"/><text x="16.9167%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (1 samples, 1.19%)</title><rect x="16.6667%" y="597" width="1.1905%" height="15" fill="rgb(218,138,4)" fg:x="14" fg:w="1"/><text x="16.9167%" y="607.50"></text></g><g><title>cli`pyrometer::Analyzer::parse_source_unit (1 samples, 1.19%)</title><rect x="17.8571%" y="693" width="1.1905%" height="15" fill="rgb(250,191,14)" fg:x="15" fg:w="1"/><text x="18.1071%" y="703.50"></text></g><g><title>cli`pyrometer::Analyzer::parse_source_unit_part (1 samples, 1.19%)</title><rect x="17.8571%" y="677" width="1.1905%" height="15" fill="rgb(239,60,40)" fg:x="15" fg:w="1"/><text x="18.1071%" y="687.50"></text></g><g><title>cli`pyrometer::Analyzer::parse_contract_def (1 samples, 1.19%)</title><rect x="17.8571%" y="661" width="1.1905%" height="15" fill="rgb(206,27,48)" fg:x="15" fg:w="1"/><text x="18.1071%" y="671.50"></text></g><g><title>cli`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 1.19%)</title><rect x="17.8571%" y="645" width="1.1905%" height="15" fill="rgb(225,35,8)" fg:x="15" fg:w="1"/><text x="18.1071%" y="655.50"></text></g><g><title>cli`&lt;solang_parser::pt::Statement as core::clone::Clone&gt;::clone (1 samples, 1.19%)</title><rect x="17.8571%" y="629" width="1.1905%" height="15" fill="rgb(250,213,24)" fg:x="15" fg:w="1"/><text x="18.1071%" y="639.50"></text></g><g><title>cli`&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 1.19%)</title><rect x="17.8571%" y="613" width="1.1905%" height="15" fill="rgb(247,123,22)" fg:x="15" fg:w="1"/><text x="18.1071%" y="623.50"></text></g><g><title>cli`&lt;solang_parser::pt::Statement as core::clone::Clone&gt;::clone (1 samples, 1.19%)</title><rect x="17.8571%" y="597" width="1.1905%" height="15" fill="rgb(231,138,38)" fg:x="15" fg:w="1"/><text x="18.1071%" y="607.50"></text></g><g><title>cli`&lt;solang_parser::pt::Expression as core::clone::Clone&gt;::clone (1 samples, 1.19%)</title><rect x="17.8571%" y="581" width="1.1905%" height="15" fill="rgb(231,145,46)" fg:x="15" fg:w="1"/><text x="18.1071%" y="591.50"></text></g><g><title>cli`&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 1.19%)</title><rect x="17.8571%" y="565" width="1.1905%" height="15" fill="rgb(251,118,11)" fg:x="15" fg:w="1"/><text x="18.1071%" y="575.50"></text></g><g><title>cli`&lt;solang_parser::pt::Expression as core::clone::Clone&gt;::clone (1 samples, 1.19%)</title><rect x="17.8571%" y="549" width="1.1905%" height="15" fill="rgb(217,147,25)" fg:x="15" fg:w="1"/><text x="18.1071%" y="559.50"></text></g><g><title>cli`&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 1.19%)</title><rect x="17.8571%" y="533" width="1.1905%" height="15" fill="rgb(247,81,37)" fg:x="15" fg:w="1"/><text x="18.1071%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 1.19%)</title><rect x="17.8571%" y="517" width="1.1905%" height="15" fill="rgb(209,12,38)" fg:x="15" fg:w="1"/><text x="18.1071%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 1.19%)</title><rect x="17.8571%" y="501" width="1.1905%" height="15" fill="rgb(227,1,9)" fg:x="15" fg:w="1"/><text x="18.1071%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (1 samples, 1.19%)</title><rect x="17.8571%" y="485" width="1.1905%" height="15" fill="rgb(248,47,43)" fg:x="15" fg:w="1"/><text x="18.1071%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (1 samples, 1.19%)</title><rect x="17.8571%" y="469" width="1.1905%" height="15" fill="rgb(221,10,30)" fg:x="15" fg:w="1"/><text x="18.1071%" y="479.50"></text></g><g><title>cli`pyrometer::context::ContextBuilder::match_var_def (1 samples, 1.19%)</title><rect x="20.2381%" y="613" width="1.1905%" height="15" fill="rgb(210,229,1)" fg:x="17" fg:w="1"/><text x="20.4881%" y="623.50"></text></g><g><title>cli`pyrometer::context::ContextBuilder::match_var_def (1 samples, 1.19%)</title><rect x="20.2381%" y="597" width="1.1905%" height="15" fill="rgb(222,148,37)" fg:x="17" fg:w="1"/><text x="20.4881%" y="607.50"></text></g><g><title>cli`&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 1.19%)</title><rect x="20.2381%" y="581" width="1.1905%" height="15" fill="rgb(234,67,33)" fg:x="17" fg:w="1"/><text x="20.4881%" y="591.50"></text></g><g><title>cli`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 1.19%)</title><rect x="20.2381%" y="565" width="1.1905%" height="15" fill="rgb(247,98,35)" fg:x="17" fg:w="1"/><text x="20.4881%" y="575.50"></text></g><g><title>cli`alloc::raw_vec::finish_grow (1 samples, 1.19%)</title><rect x="20.2381%" y="549" width="1.1905%" height="15" fill="rgb(247,138,52)" fg:x="17" fg:w="1"/><text x="20.4881%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 1.19%)</title><rect x="20.2381%" y="533" width="1.1905%" height="15" fill="rgb(213,79,30)" fg:x="17" fg:w="1"/><text x="20.4881%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 1.19%)</title><rect x="20.2381%" y="517" width="1.1905%" height="15" fill="rgb(246,177,23)" fg:x="17" fg:w="1"/><text x="20.4881%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (1 samples, 1.19%)</title><rect x="20.2381%" y="501" width="1.1905%" height="15" fill="rgb(230,62,27)" fg:x="17" fg:w="1"/><text x="20.4881%" y="511.50"></text></g><g><title>cli`pyrometer::context::ContextBuilder::advance_var_in_ctx (1 samples, 1.19%)</title><rect x="21.4286%" y="533" width="1.1905%" height="15" fill="rgb(216,154,8)" fg:x="18" fg:w="1"/><text x="21.6786%" y="543.50"></text></g><g><title>cli`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 1.19%)</title><rect x="21.4286%" y="517" width="1.1905%" height="15" fill="rgb(244,35,45)" fg:x="18" fg:w="1"/><text x="21.6786%" y="527.50"></text></g><g><title>cli`alloc::raw_vec::finish_grow (1 samples, 1.19%)</title><rect x="21.4286%" y="501" width="1.1905%" height="15" fill="rgb(251,115,12)" fg:x="18" fg:w="1"/><text x="21.6786%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`realloc (1 samples, 1.19%)</title><rect x="21.4286%" y="485" width="1.1905%" height="15" fill="rgb(240,54,50)" fg:x="18" fg:w="1"/><text x="21.6786%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (1 samples, 1.19%)</title><rect x="21.4286%" y="469" width="1.1905%" height="15" fill="rgb(233,84,52)" fg:x="18" fg:w="1"/><text x="21.6786%" y="479.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 1.19%)</title><rect x="21.4286%" y="453" width="1.1905%" height="15" fill="rgb(207,117,47)" fg:x="18" fg:w="1"/><text x="21.6786%" y="463.50"></text></g><g><title>cli`&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 1.19%)</title><rect x="22.6190%" y="405" width="1.1905%" height="15" fill="rgb(249,43,39)" fg:x="19" fg:w="1"/><text x="22.8690%" y="415.50"></text></g><g><title>cli`shared::analyzer::Search::search_children (1 samples, 1.19%)</title><rect x="22.6190%" y="389" width="1.1905%" height="15" fill="rgb(209,38,44)" fg:x="19" fg:w="1"/><text x="22.8690%" y="399.50"></text></g><g><title>cli`&lt;alloc::collections::btree::set::BTreeSet&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 1.19%)</title><rect x="22.6190%" y="373" width="1.1905%" height="15" fill="rgb(236,212,23)" fg:x="19" fg:w="1"/><text x="22.8690%" y="383.50"></text></g><g><title>cli`alloc::collections::btree::append::_&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::bulk_push (1 samples, 1.19%)</title><rect x="22.6190%" y="357" width="1.1905%" height="15" fill="rgb(242,79,21)" fg:x="19" fg:w="1"/><text x="22.8690%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`free (1 samples, 1.19%)</title><rect x="22.6190%" y="341" width="1.1905%" height="15" fill="rgb(211,96,35)" fg:x="19" fg:w="1"/><text x="22.8690%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (1 samples, 1.19%)</title><rect x="22.6190%" y="325" width="1.1905%" height="15" fill="rgb(253,215,40)" fg:x="19" fg:w="1"/><text x="22.8690%" y="335.50"></text></g><g><title>cli`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 2.38%)</title><rect x="22.6190%" y="421" width="2.3810%" height="15" fill="rgb(211,81,21)" fg:x="19" fg:w="2"/><text x="22.8690%" y="431.50">cl..</text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 1.19%)</title><rect x="23.8095%" y="405" width="1.1905%" height="15" fill="rgb(208,190,38)" fg:x="20" fg:w="1"/><text x="24.0595%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 1.19%)</title><rect x="23.8095%" y="389" width="1.1905%" height="15" fill="rgb(235,213,38)" fg:x="20" fg:w="1"/><text x="24.0595%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (1 samples, 1.19%)</title><rect x="23.8095%" y="373" width="1.1905%" height="15" fill="rgb(237,122,38)" fg:x="20" fg:w="1"/><text x="24.0595%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (1 samples, 1.19%)</title><rect x="23.8095%" y="357" width="1.1905%" height="15" fill="rgb(244,218,35)" fg:x="20" fg:w="1"/><text x="24.0595%" y="367.50"></text></g><g><title>cli`&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 3.57%)</title><rect x="22.6190%" y="469" width="3.5714%" height="15" fill="rgb(240,68,47)" fg:x="19" fg:w="3"/><text x="22.8690%" y="479.50">cli`..</text></g><g><title>cli`shared::analyzer::Search::search_children (3 samples, 3.57%)</title><rect x="22.6190%" y="453" width="3.5714%" height="15" fill="rgb(210,16,53)" fg:x="19" fg:w="3"/><text x="22.8690%" y="463.50">cli`..</text></g><g><title>cli`&lt;alloc::collections::btree::set::BTreeSet&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (3 samples, 3.57%)</title><rect x="22.6190%" y="437" width="3.5714%" height="15" fill="rgb(235,124,12)" fg:x="19" fg:w="3"/><text x="22.8690%" y="447.50">cli`..</text></g><g><title>cli`alloc::collections::btree::append::_&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::bulk_push (1 samples, 1.19%)</title><rect x="25.0000%" y="421" width="1.1905%" height="15" fill="rgb(224,169,11)" fg:x="21" fg:w="1"/><text x="25.2500%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (1 samples, 1.19%)</title><rect x="25.0000%" y="405" width="1.1905%" height="15" fill="rgb(250,166,2)" fg:x="21" fg:w="1"/><text x="25.2500%" y="415.50"></text></g><g><title>cli`shared::context::ContextNode::var_by_name (4 samples, 4.76%)</title><rect x="22.6190%" y="533" width="4.7619%" height="15" fill="rgb(242,216,29)" fg:x="19" fg:w="4"/><text x="22.8690%" y="543.50">cli`sh..</text></g><g><title>cli`shared::analyzer::Search::search_children (4 samples, 4.76%)</title><rect x="22.6190%" y="517" width="4.7619%" height="15" fill="rgb(230,116,27)" fg:x="19" fg:w="4"/><text x="22.8690%" y="527.50">cli`sh..</text></g><g><title>cli`&lt;alloc::collections::btree::set::BTreeSet&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (4 samples, 4.76%)</title><rect x="22.6190%" y="501" width="4.7619%" height="15" fill="rgb(228,99,48)" fg:x="19" fg:w="4"/><text x="22.8690%" y="511.50">cli`&lt;a..</text></g><g><title>cli`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 4.76%)</title><rect x="22.6190%" y="485" width="4.7619%" height="15" fill="rgb(253,11,6)" fg:x="19" fg:w="4"/><text x="22.8690%" y="495.50">cli`&lt;a..</text></g><g><title>cli`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 1.19%)</title><rect x="26.1905%" y="469" width="1.1905%" height="15" fill="rgb(247,143,39)" fg:x="22" fg:w="1"/><text x="26.4405%" y="479.50"></text></g><g><title>cli`alloc::raw_vec::finish_grow (1 samples, 1.19%)</title><rect x="26.1905%" y="453" width="1.1905%" height="15" fill="rgb(236,97,10)" fg:x="22" fg:w="1"/><text x="26.4405%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`realloc (1 samples, 1.19%)</title><rect x="26.1905%" y="437" width="1.1905%" height="15" fill="rgb(233,208,19)" fg:x="22" fg:w="1"/><text x="26.4405%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (1 samples, 1.19%)</title><rect x="26.1905%" y="421" width="1.1905%" height="15" fill="rgb(216,164,2)" fg:x="22" fg:w="1"/><text x="26.4405%" y="431.50"></text></g><g><title>cli`pyrometer::context::ContextBuilder::parse_ctx_expr (6 samples, 7.14%)</title><rect x="21.4286%" y="565" width="7.1429%" height="15" fill="rgb(220,129,5)" fg:x="18" fg:w="6"/><text x="21.6786%" y="575.50">cli`pyrome..</text></g><g><title>cli`pyrometer::context::exprs::variable::Variable::variable (6 samples, 7.14%)</title><rect x="21.4286%" y="549" width="7.1429%" height="15" fill="rgb(242,17,10)" fg:x="18" fg:w="6"/><text x="21.6786%" y="559.50">cli`pyrome..</text></g><g><title>libsystem_platform.dylib`_platform_memcmp (1 samples, 1.19%)</title><rect x="27.3810%" y="533" width="1.1905%" height="15" fill="rgb(242,107,0)" fg:x="23" fg:w="1"/><text x="27.6310%" y="543.50"></text></g><g><title>cli`&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 1.19%)</title><rect x="29.7619%" y="357" width="1.1905%" height="15" fill="rgb(251,28,31)" fg:x="25" fg:w="1"/><text x="30.0119%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (1 samples, 1.19%)</title><rect x="29.7619%" y="341" width="1.1905%" height="15" fill="rgb(233,223,10)" fg:x="25" fg:w="1"/><text x="30.0119%" y="351.50"></text></g><g><title>cli`&lt;alloc::collections::btree::set::BTreeSet&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 1.19%)</title><rect x="34.5238%" y="277" width="1.1905%" height="15" fill="rgb(215,21,27)" fg:x="29" fg:w="1"/><text x="34.7738%" y="287.50"></text></g><g><title>cli`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 1.19%)</title><rect x="34.5238%" y="261" width="1.1905%" height="15" fill="rgb(232,23,21)" fg:x="29" fg:w="1"/><text x="34.7738%" y="271.50"></text></g><g><title>cli`&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 1.19%)</title><rect x="34.5238%" y="245" width="1.1905%" height="15" fill="rgb(244,5,23)" fg:x="29" fg:w="1"/><text x="34.7738%" y="255.50"></text></g><g><title>cli`&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 1.19%)</title><rect x="34.5238%" y="229" width="1.1905%" height="15" fill="rgb(226,81,46)" fg:x="29" fg:w="1"/><text x="34.7738%" y="239.50"></text></g><g><title>cli`&lt;alloc::collections::btree::set::BTreeSet&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (6 samples, 7.14%)</title><rect x="29.7619%" y="405" width="7.1429%" height="15" fill="rgb(247,70,30)" fg:x="25" fg:w="6"/><text x="30.0119%" y="415.50">cli`&lt;alloc..</text></g><g><title>cli`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (6 samples, 7.14%)</title><rect x="29.7619%" y="389" width="7.1429%" height="15" fill="rgb(212,68,19)" fg:x="25" fg:w="6"/><text x="30.0119%" y="399.50">cli`&lt;alloc..</text></g><g><title>cli`&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 7.14%)</title><rect x="29.7619%" y="373" width="7.1429%" height="15" fill="rgb(240,187,13)" fg:x="25" fg:w="6"/><text x="30.0119%" y="383.50">cli`&lt;core:..</text></g><g><title>cli`shared::analyzer::Search::search_children (5 samples, 5.95%)</title><rect x="30.9524%" y="357" width="5.9524%" height="15" fill="rgb(223,113,26)" fg:x="26" fg:w="5"/><text x="31.2024%" y="367.50">cli`shar..</text></g><g><title>cli`&lt;alloc::collections::btree::set::BTreeSet&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (5 samples, 5.95%)</title><rect x="30.9524%" y="341" width="5.9524%" height="15" fill="rgb(206,192,2)" fg:x="26" fg:w="5"/><text x="31.2024%" y="351.50">cli`&lt;all..</text></g><g><title>cli`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (5 samples, 5.95%)</title><rect x="30.9524%" y="325" width="5.9524%" height="15" fill="rgb(241,108,4)" fg:x="26" fg:w="5"/><text x="31.2024%" y="335.50">cli`&lt;all..</text></g><g><title>cli`&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 3.57%)</title><rect x="33.3333%" y="309" width="3.5714%" height="15" fill="rgb(247,173,49)" fg:x="28" fg:w="3"/><text x="33.5833%" y="319.50">cli`..</text></g><g><title>cli`shared::analyzer::Search::search_children (3 samples, 3.57%)</title><rect x="33.3333%" y="293" width="3.5714%" height="15" fill="rgb(224,114,35)" fg:x="28" fg:w="3"/><text x="33.5833%" y="303.50">cli`..</text></g><g><title>cli`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 1.19%)</title><rect x="35.7143%" y="277" width="1.1905%" height="15" fill="rgb(245,159,27)" fg:x="30" fg:w="1"/><text x="35.9643%" y="287.50"></text></g><g><title>cli`pyrometer::context::ContextBuilder::intrinsic_func_call (14 samples, 16.67%)</title><rect x="21.4286%" y="597" width="16.6667%" height="15" fill="rgb(245,172,44)" fg:x="18" fg:w="14"/><text x="21.6786%" y="607.50">cli`pyrometer::context::Co..</text></g><g><title>cli`pyrometer::context::exprs::require::Require::handle_require (14 samples, 16.67%)</title><rect x="21.4286%" y="581" width="16.6667%" height="15" fill="rgb(236,23,11)" fg:x="18" fg:w="14"/><text x="21.6786%" y="591.50">cli`pyrometer::context::ex..</text></g><g><title>cli`pyrometer::context::exprs::require::Require::handle_require_inner (8 samples, 9.52%)</title><rect x="28.5714%" y="565" width="9.5238%" height="15" fill="rgb(205,117,38)" fg:x="24" fg:w="8"/><text x="28.8214%" y="575.50">cli`pyrometer:..</text></g><g><title>cli`pyrometer::context::exprs::require::Require::handle_require_inner (8 samples, 9.52%)</title><rect x="28.5714%" y="549" width="9.5238%" height="15" fill="rgb(237,72,25)" fg:x="24" fg:w="8"/><text x="28.8214%" y="559.50">cli`pyrometer:..</text></g><g><title>cli`pyrometer::context::exprs::require::Require::require (8 samples, 9.52%)</title><rect x="28.5714%" y="533" width="9.5238%" height="15" fill="rgb(244,70,9)" fg:x="24" fg:w="8"/><text x="28.8214%" y="543.50">cli`pyrometer:..</text></g><g><title>cli`shared::range::Range::update_deps (8 samples, 9.52%)</title><rect x="28.5714%" y="517" width="9.5238%" height="15" fill="rgb(217,125,39)" fg:x="24" fg:w="8"/><text x="28.8214%" y="527.50">cli`shared::ra..</text></g><g><title>cli`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (8 samples, 9.52%)</title><rect x="28.5714%" y="501" width="9.5238%" height="15" fill="rgb(235,36,10)" fg:x="24" fg:w="8"/><text x="28.8214%" y="511.50">cli`&lt;alloc::co..</text></g><g><title>cli`alloc::vec::in_place_collect::_&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (8 samples, 9.52%)</title><rect x="28.5714%" y="485" width="9.5238%" height="15" fill="rgb(251,123,47)" fg:x="24" fg:w="8"/><text x="28.8214%" y="495.50">cli`alloc::vec..</text></g><g><title>cli`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (8 samples, 9.52%)</title><rect x="28.5714%" y="469" width="9.5238%" height="15" fill="rgb(221,13,13)" fg:x="24" fg:w="8"/><text x="28.8214%" y="479.50">cli`&lt;core::ite..</text></g><g><title>cli`shared::context::var::ContextVarNode::latest_version_in_ctx (8 samples, 9.52%)</title><rect x="28.5714%" y="453" width="9.5238%" height="15" fill="rgb(238,131,9)" fg:x="24" fg:w="8"/><text x="28.8214%" y="463.50">cli`shared::co..</text></g><g><title>cli`shared::context::ContextNode::var_by_name (8 samples, 9.52%)</title><rect x="28.5714%" y="437" width="9.5238%" height="15" fill="rgb(211,50,8)" fg:x="24" fg:w="8"/><text x="28.8214%" y="447.50">cli`shared::co..</text></g><g><title>cli`shared::analyzer::Search::search_children (7 samples, 8.33%)</title><rect x="29.7619%" y="421" width="8.3333%" height="15" fill="rgb(245,182,24)" fg:x="25" fg:w="7"/><text x="30.0119%" y="431.50">cli`shared::..</text></g><g><title>cli`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 1.19%)</title><rect x="36.9048%" y="405" width="1.1905%" height="15" fill="rgb(242,14,37)" fg:x="31" fg:w="1"/><text x="37.1548%" y="415.50"></text></g><g><title>cli`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 1.19%)</title><rect x="36.9048%" y="389" width="1.1905%" height="15" fill="rgb(246,228,12)" fg:x="31" fg:w="1"/><text x="37.1548%" y="399.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 1.19%)</title><rect x="36.9048%" y="373" width="1.1905%" height="15" fill="rgb(213,55,15)" fg:x="31" fg:w="1"/><text x="37.1548%" y="383.50"></text></g><g><title>cli`&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 1.19%)</title><rect x="38.0952%" y="485" width="1.1905%" height="15" fill="rgb(209,9,3)" fg:x="32" fg:w="1"/><text x="38.3452%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (1 samples, 1.19%)</title><rect x="38.0952%" y="469" width="1.1905%" height="15" fill="rgb(230,59,30)" fg:x="32" fg:w="1"/><text x="38.3452%" y="479.50"></text></g><g><title>cli`&lt;alloc::collections::btree::set::BTreeSet&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (3 samples, 3.57%)</title><rect x="38.0952%" y="533" width="3.5714%" height="15" fill="rgb(209,121,21)" fg:x="32" fg:w="3"/><text x="38.3452%" y="543.50">cli`..</text></g><g><title>cli`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 3.57%)</title><rect x="38.0952%" y="517" width="3.5714%" height="15" fill="rgb(220,109,13)" fg:x="32" fg:w="3"/><text x="38.3452%" y="527.50">cli`..</text></g><g><title>cli`&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 3.57%)</title><rect x="38.0952%" y="501" width="3.5714%" height="15" fill="rgb(232,18,1)" fg:x="32" fg:w="3"/><text x="38.3452%" y="511.50">cli`..</text></g><g><title>cli`shared::analyzer::Search::search_children (2 samples, 2.38%)</title><rect x="39.2857%" y="485" width="2.3810%" height="15" fill="rgb(215,41,42)" fg:x="33" fg:w="2"/><text x="39.5357%" y="495.50">cl..</text></g><g><title>cli`&lt;alloc::collections::btree::set::BTreeSet&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2 samples, 2.38%)</title><rect x="39.2857%" y="469" width="2.3810%" height="15" fill="rgb(224,123,36)" fg:x="33" fg:w="2"/><text x="39.5357%" y="479.50">cl..</text></g><g><title>cli`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 2.38%)</title><rect x="39.2857%" y="453" width="2.3810%" height="15" fill="rgb(240,125,3)" fg:x="33" fg:w="2"/><text x="39.5357%" y="463.50">cl..</text></g><g><title>cli`&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 2.38%)</title><rect x="39.2857%" y="437" width="2.3810%" height="15" fill="rgb(205,98,50)" fg:x="33" fg:w="2"/><text x="39.5357%" y="447.50">cl..</text></g><g><title>cli`shared::analyzer::Search::search_children (2 samples, 2.38%)</title><rect x="39.2857%" y="421" width="2.3810%" height="15" fill="rgb(205,185,37)" fg:x="33" fg:w="2"/><text x="39.5357%" y="431.50">cl..</text></g><g><title>cli`&lt;alloc::collections::btree::set::BTreeSet&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2 samples, 2.38%)</title><rect x="39.2857%" y="405" width="2.3810%" height="15" fill="rgb(238,207,15)" fg:x="33" fg:w="2"/><text x="39.5357%" y="415.50">cl..</text></g><g><title>cli`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 2.38%)</title><rect x="39.2857%" y="389" width="2.3810%" height="15" fill="rgb(213,199,42)" fg:x="33" fg:w="2"/><text x="39.5357%" y="399.50">cl..</text></g><g><title>cli`&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 1.19%)</title><rect x="40.4762%" y="373" width="1.1905%" height="15" fill="rgb(235,201,11)" fg:x="34" fg:w="1"/><text x="40.7262%" y="383.50"></text></g><g><title>cli`pyrometer::context::ContextBuilder::parse_ctx_expr (4 samples, 4.76%)</title><rect x="38.0952%" y="597" width="4.7619%" height="15" fill="rgb(207,46,11)" fg:x="32" fg:w="4"/><text x="38.3452%" y="607.50">cli`py..</text></g><g><title>cli`pyrometer::context::exprs::variable::Variable::variable (4 samples, 4.76%)</title><rect x="38.0952%" y="581" width="4.7619%" height="15" fill="rgb(241,35,35)" fg:x="32" fg:w="4"/><text x="38.3452%" y="591.50">cli`py..</text></g><g><title>cli`shared::context::ContextNode::var_by_name (4 samples, 4.76%)</title><rect x="38.0952%" y="565" width="4.7619%" height="15" fill="rgb(243,32,47)" fg:x="32" fg:w="4"/><text x="38.3452%" y="575.50">cli`sh..</text></g><g><title>cli`shared::analyzer::Search::search_children (4 samples, 4.76%)</title><rect x="38.0952%" y="549" width="4.7619%" height="15" fill="rgb(247,202,23)" fg:x="32" fg:w="4"/><text x="38.3452%" y="559.50">cli`sh..</text></g><g><title>cli`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 1.19%)</title><rect x="41.6667%" y="533" width="1.1905%" height="15" fill="rgb(219,102,11)" fg:x="35" fg:w="1"/><text x="41.9167%" y="543.50"></text></g><g><title>cli`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 1.19%)</title><rect x="41.6667%" y="517" width="1.1905%" height="15" fill="rgb(243,110,44)" fg:x="35" fg:w="1"/><text x="41.9167%" y="527.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 1.19%)</title><rect x="41.6667%" y="501" width="1.1905%" height="15" fill="rgb(222,74,54)" fg:x="35" fg:w="1"/><text x="41.9167%" y="511.50"></text></g><g><title>cli`pyrometer::context::ContextBuilder::setup_fn_call (1 samples, 1.19%)</title><rect x="42.8571%" y="597" width="1.1905%" height="15" fill="rgb(216,99,12)" fg:x="36" fg:w="1"/><text x="43.1071%" y="607.50"></text></g><g><title>cli`pyrometer::context::ContextBuilder::func_call_inner (1 samples, 1.19%)</title><rect x="42.8571%" y="581" width="1.1905%" height="15" fill="rgb(226,22,26)" fg:x="36" fg:w="1"/><text x="43.1071%" y="591.50"></text></g><g><title>cli`pyrometer::context::ContextBuilder::execute_call_inner (1 samples, 1.19%)</title><rect x="42.8571%" y="565" width="1.1905%" height="15" fill="rgb(217,163,10)" fg:x="36" fg:w="1"/><text x="43.1071%" y="575.50"></text></g><g><title>cli`pyrometer::context::ContextBuilder::parse_ctx_stmt_inner (1 samples, 1.19%)</title><rect x="42.8571%" y="549" width="1.1905%" height="15" fill="rgb(213,25,53)" fg:x="36" fg:w="1"/><text x="43.1071%" y="559.50"></text></g><g><title>cli`pyrometer::context::ContextBuilder::parse_ctx_stmt_inner (1 samples, 1.19%)</title><rect x="42.8571%" y="533" width="1.1905%" height="15" fill="rgb(252,105,26)" fg:x="36" fg:w="1"/><text x="43.1071%" y="543.50"></text></g><g><title>cli`pyrometer::context::ContextBuilder::parse_ctx_expr (1 samples, 1.19%)</title><rect x="42.8571%" y="517" width="1.1905%" height="15" fill="rgb(220,39,43)" fg:x="36" fg:w="1"/><text x="43.1071%" y="527.50"></text></g><g><title>cli`pyrometer::context::exprs::bin_op::BinOp::op_expr (1 samples, 1.19%)</title><rect x="42.8571%" y="501" width="1.1905%" height="15" fill="rgb(229,68,48)" fg:x="36" fg:w="1"/><text x="43.1071%" y="511.50"></text></g><g><title>cli`pyrometer::context::exprs::bin_op::BinOp::op (1 samples, 1.19%)</title><rect x="42.8571%" y="485" width="1.1905%" height="15" fill="rgb(252,8,32)" fg:x="36" fg:w="1"/><text x="43.1071%" y="495.50"></text></g><g><title>cli`core::ptr::drop_in_place&lt;shared::range::SolcRange&gt; (1 samples, 1.19%)</title><rect x="42.8571%" y="469" width="1.1905%" height="15" fill="rgb(223,20,43)" fg:x="36" fg:w="1"/><text x="43.1071%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (1 samples, 1.19%)</title><rect x="42.8571%" y="453" width="1.1905%" height="15" fill="rgb(229,81,49)" fg:x="36" fg:w="1"/><text x="43.1071%" y="463.50"></text></g><g><title>cli`&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 1.19%)</title><rect x="48.8095%" y="261" width="1.1905%" height="15" fill="rgb(236,28,36)" fg:x="41" fg:w="1"/><text x="49.0595%" y="271.50"></text></g><g><title>cli`&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 1.19%)</title><rect x="50.0000%" y="245" width="1.1905%" height="15" fill="rgb(249,185,26)" fg:x="42" fg:w="1"/><text x="50.2500%" y="255.50"></text></g><g><title>cli`&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 1.19%)</title><rect x="60.7143%" y="197" width="1.1905%" height="15" fill="rgb(249,174,33)" fg:x="51" fg:w="1"/><text x="60.9643%" y="207.50"></text></g><g><title>cli`&lt;alloc::collections::btree::set::BTreeSet&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 1.19%)</title><rect x="61.9048%" y="197" width="1.1905%" height="15" fill="rgb(233,201,37)" fg:x="52" fg:w="1"/><text x="62.1548%" y="207.50"></text></g><g><title>cli`&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 1.19%)</title><rect x="65.4762%" y="181" width="1.1905%" height="15" fill="rgb(221,78,26)" fg:x="55" fg:w="1"/><text x="65.7262%" y="191.50"></text></g><g><title>cli`&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 1.19%)</title><rect x="76.1905%" y="117" width="1.1905%" height="15" fill="rgb(250,127,30)" fg:x="64" fg:w="1"/><text x="76.4405%" y="127.50"></text></g><g><title>cli`&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 1.19%)</title><rect x="77.3810%" y="117" width="1.1905%" height="15" fill="rgb(230,49,44)" fg:x="65" fg:w="1"/><text x="77.6310%" y="127.50"></text></g><g><title>cli`&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 1.19%)</title><rect x="86.9048%" y="53" width="1.1905%" height="15" fill="rgb(229,67,23)" fg:x="73" fg:w="1"/><text x="87.1548%" y="63.50"></text></g><g><title>cli`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (6 samples, 7.14%)</title><rect x="84.5238%" y="101" width="7.1429%" height="15" fill="rgb(249,83,47)" fg:x="71" fg:w="6"/><text x="84.7738%" y="111.50">cli`&lt;alloc..</text></g><g><title>cli`&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 5.95%)</title><rect x="85.7143%" y="85" width="5.9524%" height="15" fill="rgb(215,43,3)" fg:x="72" fg:w="5"/><text x="85.9643%" y="95.50">cli`&lt;cor..</text></g><g><title>cli`shared::analyzer::Search::search_children (4 samples, 4.76%)</title><rect x="86.9048%" y="69" width="4.7619%" height="15" fill="rgb(238,154,13)" fg:x="73" fg:w="4"/><text x="87.1548%" y="79.50">cli`sh..</text></g><g><title>cli`&lt;alloc::collections::btree::set::BTreeSet&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (3 samples, 3.57%)</title><rect x="88.0952%" y="53" width="3.5714%" height="15" fill="rgb(219,56,2)" fg:x="74" fg:w="3"/><text x="88.3452%" y="63.50">cli`..</text></g><g><title>cli`&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 1.19%)</title><rect x="90.4762%" y="37" width="1.1905%" height="15" fill="rgb(233,0,4)" fg:x="76" fg:w="1"/><text x="90.7262%" y="47.50"></text></g><g><title>cli`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (21 samples, 25.00%)</title><rect x="69.0476%" y="165" width="25.0000%" height="15" fill="rgb(235,30,7)" fg:x="58" fg:w="21"/><text x="69.2976%" y="175.50">cli`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::s..</text></g><g><title>cli`&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (19 samples, 22.62%)</title><rect x="71.4286%" y="149" width="22.6190%" height="15" fill="rgb(250,79,13)" fg:x="60" fg:w="19"/><text x="71.6786%" y="159.50">cli`&lt;core::iter::adapters::flatten::..</text></g><g><title>cli`shared::analyzer::Search::search_children (16 samples, 19.05%)</title><rect x="75.0000%" y="133" width="19.0476%" height="15" fill="rgb(211,146,34)" fg:x="63" fg:w="16"/><text x="75.2500%" y="143.50">cli`shared::analyzer::Search::..</text></g><g><title>cli`&lt;alloc::collections::btree::set::BTreeSet&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (13 samples, 15.48%)</title><rect x="78.5714%" y="117" width="15.4762%" height="15" fill="rgb(228,22,38)" fg:x="66" fg:w="13"/><text x="78.8214%" y="127.50">cli`&lt;alloc::collections:..</text></g><g><title>cli`&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 2.38%)</title><rect x="91.6667%" y="101" width="2.3810%" height="15" fill="rgb(235,168,5)" fg:x="77" fg:w="2"/><text x="91.9167%" y="111.50">cl..</text></g><g><title>cli`&lt;alloc::collections::btree::set::BTreeSet&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (37 samples, 44.05%)</title><rect x="51.1905%" y="245" width="44.0476%" height="15" fill="rgb(221,155,16)" fg:x="43" fg:w="37"/><text x="51.4405%" y="255.50">cli`&lt;alloc::collections::btree::set::BTreeSet&lt;T&gt; as core::iter::traits::..</text></g><g><title>cli`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (35 samples, 41.67%)</title><rect x="53.5714%" y="229" width="41.6667%" height="15" fill="rgb(215,215,53)" fg:x="45" fg:w="35"/><text x="53.8214%" y="239.50">cli`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;..</text></g><g><title>cli`&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (29 samples, 34.52%)</title><rect x="60.7143%" y="213" width="34.5238%" height="15" fill="rgb(223,4,10)" fg:x="51" fg:w="29"/><text x="60.9643%" y="223.50">cli`&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as co..</text></g><g><title>cli`shared::analyzer::Search::search_children (27 samples, 32.14%)</title><rect x="63.0952%" y="197" width="32.1429%" height="15" fill="rgb(234,103,6)" fg:x="53" fg:w="27"/><text x="63.3452%" y="207.50">cli`shared::analyzer::Search::search_children</text></g><g><title>cli`&lt;alloc::collections::btree::set::BTreeSet&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (24 samples, 28.57%)</title><rect x="66.6667%" y="181" width="28.5714%" height="15" fill="rgb(227,97,0)" fg:x="56" fg:w="24"/><text x="66.9167%" y="191.50">cli`&lt;alloc::collections::btree::set::BTreeSet&lt;..</text></g><g><title>cli`&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 1.19%)</title><rect x="94.0476%" y="165" width="1.1905%" height="15" fill="rgb(234,150,53)" fg:x="79" fg:w="1"/><text x="94.2976%" y="175.50"></text></g><g><title>cli`&lt;alloc::collections::btree::set::BTreeSet&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (44 samples, 52.38%)</title><rect x="44.0476%" y="309" width="52.3810%" height="15" fill="rgb(228,201,54)" fg:x="37" fg:w="44"/><text x="44.2976%" y="319.50">cli`&lt;alloc::collections::btree::set::BTreeSet&lt;T&gt; as core::iter::traits::collect::FromI..</text></g><g><title>cli`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (44 samples, 52.38%)</title><rect x="44.0476%" y="293" width="52.3810%" height="15" fill="rgb(222,22,37)" fg:x="37" fg:w="44"/><text x="44.2976%" y="303.50">cli`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter</text></g><g><title>cli`&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (43 samples, 51.19%)</title><rect x="45.2381%" y="277" width="51.1905%" height="15" fill="rgb(237,53,32)" fg:x="38" fg:w="43"/><text x="45.4881%" y="287.50">cli`&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::..</text></g><g><title>cli`shared::analyzer::Search::search_children (39 samples, 46.43%)</title><rect x="50.0000%" y="261" width="46.4286%" height="15" fill="rgb(233,25,53)" fg:x="42" fg:w="39"/><text x="50.2500%" y="271.50">cli`shared::analyzer::Search::search_children</text></g><g><title>cli`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 1.19%)</title><rect x="95.2381%" y="245" width="1.1905%" height="15" fill="rgb(210,40,34)" fg:x="80" fg:w="1"/><text x="95.4881%" y="255.50"></text></g><g><title>cli`pyrometer::context::ContextBuilder::parse_ctx_stmt_inner (66 samples, 78.57%)</title><rect x="19.0476%" y="693" width="78.5714%" height="15" fill="rgb(241,220,44)" fg:x="16" fg:w="66"/><text x="19.2976%" y="703.50">cli`pyrometer::context::ContextBuilder::parse_ctx_stmt_inner</text></g><g><title>cli`pyrometer::context::ContextBuilder::func_call_inner (66 samples, 78.57%)</title><rect x="19.0476%" y="677" width="78.5714%" height="15" fill="rgb(235,28,35)" fg:x="16" fg:w="66"/><text x="19.2976%" y="687.50">cli`pyrometer::context::ContextBuilder::func_call_inner</text></g><g><title>cli`pyrometer::context::ContextBuilder::execute_call_inner (66 samples, 78.57%)</title><rect x="19.0476%" y="661" width="78.5714%" height="15" fill="rgb(210,56,17)" fg:x="16" fg:w="66"/><text x="19.2976%" y="671.50">cli`pyrometer::context::ContextBuilder::execute_call_inner</text></g><g><title>cli`pyrometer::context::ContextBuilder::parse_ctx_stmt_inner (65 samples, 77.38%)</title><rect x="20.2381%" y="645" width="77.3810%" height="15" fill="rgb(224,130,29)" fg:x="17" fg:w="65"/><text x="20.4881%" y="655.50">cli`pyrometer::context::ContextBuilder::parse_ctx_stmt_inner</text></g><g><title>cli`pyrometer::context::ContextBuilder::parse_ctx_stmt_inner (65 samples, 77.38%)</title><rect x="20.2381%" y="629" width="77.3810%" height="15" fill="rgb(235,212,8)" fg:x="17" fg:w="65"/><text x="20.4881%" y="639.50">cli`pyrometer::context::ContextBuilder::parse_ctx_stmt_inner</text></g><g><title>cli`pyrometer::context::ContextBuilder::parse_ctx_expr (64 samples, 76.19%)</title><rect x="21.4286%" y="613" width="76.1905%" height="15" fill="rgb(223,33,50)" fg:x="18" fg:w="64"/><text x="21.6786%" y="623.50">cli`pyrometer::context::ContextBuilder::parse_ctx_expr</text></g><g><title>cli`shared::context::ContextNode::visible_funcs (45 samples, 53.57%)</title><rect x="44.0476%" y="597" width="53.5714%" height="15" fill="rgb(219,149,13)" fg:x="37" fg:w="45"/><text x="44.2976%" y="607.50">cli`shared::context::ContextNode::visible_funcs</text></g><g><title>cli`shared::analyzer::Search::search_children (45 samples, 53.57%)</title><rect x="44.0476%" y="581" width="53.5714%" height="15" fill="rgb(250,156,29)" fg:x="37" fg:w="45"/><text x="44.2976%" y="591.50">cli`shared::analyzer::Search::search_children</text></g><g><title>cli`&lt;alloc::collections::btree::set::BTreeSet&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (45 samples, 53.57%)</title><rect x="44.0476%" y="565" width="53.5714%" height="15" fill="rgb(216,193,19)" fg:x="37" fg:w="45"/><text x="44.2976%" y="575.50">cli`&lt;alloc::collections::btree::set::BTreeSet&lt;T&gt; as core::iter::traits::collect::FromIte..</text></g><g><title>cli`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (45 samples, 53.57%)</title><rect x="44.0476%" y="549" width="53.5714%" height="15" fill="rgb(216,135,14)" fg:x="37" fg:w="45"/><text x="44.2976%" y="559.50">cli`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter</text></g><g><title>cli`&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (45 samples, 53.57%)</title><rect x="44.0476%" y="533" width="53.5714%" height="15" fill="rgb(241,47,5)" fg:x="37" fg:w="45"/><text x="44.2976%" y="543.50">cli`&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iter..</text></g><g><title>cli`shared::analyzer::Search::search_children (45 samples, 53.57%)</title><rect x="44.0476%" y="517" width="53.5714%" height="15" fill="rgb(233,42,35)" fg:x="37" fg:w="45"/><text x="44.2976%" y="527.50">cli`shared::analyzer::Search::search_children</text></g><g><title>cli`&lt;alloc::collections::btree::set::BTreeSet&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (45 samples, 53.57%)</title><rect x="44.0476%" y="501" width="53.5714%" height="15" fill="rgb(231,13,6)" fg:x="37" fg:w="45"/><text x="44.2976%" y="511.50">cli`&lt;alloc::collections::btree::set::BTreeSet&lt;T&gt; as core::iter::traits::collect::FromIte..</text></g><g><title>cli`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (45 samples, 53.57%)</title><rect x="44.0476%" y="485" width="53.5714%" height="15" fill="rgb(207,181,40)" fg:x="37" fg:w="45"/><text x="44.2976%" y="495.50">cli`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter</text></g><g><title>cli`&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (45 samples, 53.57%)</title><rect x="44.0476%" y="469" width="53.5714%" height="15" fill="rgb(254,173,49)" fg:x="37" fg:w="45"/><text x="44.2976%" y="479.50">cli`&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iter..</text></g><g><title>cli`shared::analyzer::Search::search_children (45 samples, 53.57%)</title><rect x="44.0476%" y="453" width="53.5714%" height="15" fill="rgb(221,1,38)" fg:x="37" fg:w="45"/><text x="44.2976%" y="463.50">cli`shared::analyzer::Search::search_children</text></g><g><title>cli`&lt;alloc::collections::btree::set::BTreeSet&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (45 samples, 53.57%)</title><rect x="44.0476%" y="437" width="53.5714%" height="15" fill="rgb(206,124,46)" fg:x="37" fg:w="45"/><text x="44.2976%" y="447.50">cli`&lt;alloc::collections::btree::set::BTreeSet&lt;T&gt; as core::iter::traits::collect::FromIte..</text></g><g><title>cli`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (45 samples, 53.57%)</title><rect x="44.0476%" y="421" width="53.5714%" height="15" fill="rgb(249,21,11)" fg:x="37" fg:w="45"/><text x="44.2976%" y="431.50">cli`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter</text></g><g><title>cli`&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (45 samples, 53.57%)</title><rect x="44.0476%" y="405" width="53.5714%" height="15" fill="rgb(222,201,40)" fg:x="37" fg:w="45"/><text x="44.2976%" y="415.50">cli`&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iter..</text></g><g><title>cli`shared::analyzer::Search::search_children (45 samples, 53.57%)</title><rect x="44.0476%" y="389" width="53.5714%" height="15" fill="rgb(235,61,29)" fg:x="37" fg:w="45"/><text x="44.2976%" y="399.50">cli`shared::analyzer::Search::search_children</text></g><g><title>cli`&lt;alloc::collections::btree::set::BTreeSet&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (45 samples, 53.57%)</title><rect x="44.0476%" y="373" width="53.5714%" height="15" fill="rgb(219,207,3)" fg:x="37" fg:w="45"/><text x="44.2976%" y="383.50">cli`&lt;alloc::collections::btree::set::BTreeSet&lt;T&gt; as core::iter::traits::collect::FromIte..</text></g><g><title>cli`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (45 samples, 53.57%)</title><rect x="44.0476%" y="357" width="53.5714%" height="15" fill="rgb(222,56,46)" fg:x="37" fg:w="45"/><text x="44.2976%" y="367.50">cli`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter</text></g><g><title>cli`&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (45 samples, 53.57%)</title><rect x="44.0476%" y="341" width="53.5714%" height="15" fill="rgb(239,76,54)" fg:x="37" fg:w="45"/><text x="44.2976%" y="351.50">cli`&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iter..</text></g><g><title>cli`shared::analyzer::Search::search_children (45 samples, 53.57%)</title><rect x="44.0476%" y="325" width="53.5714%" height="15" fill="rgb(231,124,27)" fg:x="37" fg:w="45"/><text x="44.2976%" y="335.50">cli`shared::analyzer::Search::search_children</text></g><g><title>cli`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 1.19%)</title><rect x="96.4286%" y="309" width="1.1905%" height="15" fill="rgb(249,195,6)" fg:x="81" fg:w="1"/><text x="96.6786%" y="319.50"></text></g><g><title>all (84 samples, 100%)</title><rect x="0.0000%" y="821" width="100.0000%" height="15" fill="rgb(237,174,47)" fg:x="0" fg:w="84"/><text x="0.2500%" y="831.50"></text></g><g><title>dyld`start (84 samples, 100.00%)</title><rect x="0.0000%" y="805" width="100.0000%" height="15" fill="rgb(206,201,31)" fg:x="0" fg:w="84"/><text x="0.2500%" y="815.50">dyld`start</text></g><g><title>cli`main (84 samples, 100.00%)</title><rect x="0.0000%" y="789" width="100.0000%" height="15" fill="rgb(231,57,52)" fg:x="0" fg:w="84"/><text x="0.2500%" y="799.50">cli`main</text></g><g><title>cli`std::rt::lang_start_internal (84 samples, 100.00%)</title><rect x="0.0000%" y="773" width="100.0000%" height="15" fill="rgb(248,177,22)" fg:x="0" fg:w="84"/><text x="0.2500%" y="783.50">cli`std::rt::lang_start_internal</text></g><g><title>cli`std::rt::lang_start::_{{closure}} (84 samples, 100.00%)</title><rect x="0.0000%" y="757" width="100.0000%" height="15" fill="rgb(215,211,37)" fg:x="0" fg:w="84"/><text x="0.2500%" y="767.50">cli`std::rt::lang_start::_{{closure}}</text></g><g><title>cli`std::sys_common::backtrace::__rust_begin_short_backtrace (84 samples, 100.00%)</title><rect x="0.0000%" y="741" width="100.0000%" height="15" fill="rgb(241,128,51)" fg:x="0" fg:w="84"/><text x="0.2500%" y="751.50">cli`std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>cli`cli::main (84 samples, 100.00%)</title><rect x="0.0000%" y="725" width="100.0000%" height="15" fill="rgb(227,165,31)" fg:x="0" fg:w="84"/><text x="0.2500%" y="735.50">cli`cli::main</text></g><g><title>cli`pyrometer::Analyzer::parse (69 samples, 82.14%)</title><rect x="17.8571%" y="709" width="82.1429%" height="15" fill="rgb(228,167,24)" fg:x="15" fg:w="69"/><text x="18.1071%" y="719.50">cli`pyrometer::Analyzer::parse</text></g><g><title>cli`solang_parser::parse (2 samples, 2.38%)</title><rect x="97.6190%" y="693" width="2.3810%" height="15" fill="rgb(228,143,12)" fg:x="82" fg:w="2"/><text x="97.8690%" y="703.50">cl..</text></g><g><title>cli`lalrpop_util::state_machine::Parser&lt;D,I&gt;::drive (2 samples, 2.38%)</title><rect x="97.6190%" y="677" width="2.3810%" height="15" fill="rgb(249,149,8)" fg:x="82" fg:w="2"/><text x="97.8690%" y="687.50">cl..</text></g><g><title>cli`solang_parser::solidity::__parse__SourceUnit::__reduce (1 samples, 1.19%)</title><rect x="98.8095%" y="661" width="1.1905%" height="15" fill="rgb(243,35,44)" fg:x="83" fg:w="1"/><text x="99.0595%" y="671.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 1.19%)</title><rect x="98.8095%" y="645" width="1.1905%" height="15" fill="rgb(246,89,9)" fg:x="83" fg:w="1"/><text x="99.0595%" y="655.50"></text></g></svg></svg>